// Code generated by MockGen. DO NOT EDIT.
// Source: wal.go

// Package wal is a generated GoMock package.
package wal

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MocklogsWriter is a mock of logsWriter interface.
type MocklogsWriter struct {
	ctrl     *gomock.Controller
	recorder *MocklogsWriterMockRecorder
}

// MocklogsWriterMockRecorder is the mock recorder for MocklogsWriter.
type MocklogsWriterMockRecorder struct {
	mock *MocklogsWriter
}

// NewMocklogsWriter creates a new mock instance.
func NewMocklogsWriter(ctrl *gomock.Controller) *MocklogsWriter {
	mock := &MocklogsWriter{ctrl: ctrl}
	mock.recorder = &MocklogsWriterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MocklogsWriter) EXPECT() *MocklogsWriterMockRecorder {
	return m.recorder
}

// Write mocks base method.
func (m *MocklogsWriter) Write(arg0 []WriteRequest) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Write", arg0)
}

// Write indicates an expected call of Write.
func (mr *MocklogsWriterMockRecorder) Write(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Write", reflect.TypeOf((*MocklogsWriter)(nil).Write), arg0)
}

// MocklogsReader is a mock of logsReader interface.
type MocklogsReader struct {
	ctrl     *gomock.Controller
	recorder *MocklogsReaderMockRecorder
}

// MocklogsReaderMockRecorder is the mock recorder for MocklogsReader.
type MocklogsReaderMockRecorder struct {
	mock *MocklogsReader
}

// NewMocklogsReader creates a new mock instance.
func NewMocklogsReader(ctrl *gomock.Controller) *MocklogsReader {
	mock := &MocklogsReader{ctrl: ctrl}
	mock.recorder = &MocklogsReaderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MocklogsReader) EXPECT() *MocklogsReaderMockRecorder {
	return m.recorder
}

// Read mocks base method.
func (m *MocklogsReader) Read() ([]Log, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Read")
	ret0, _ := ret[0].([]Log)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Read indicates an expected call of Read.
func (mr *MocklogsReaderMockRecorder) Read() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Read", reflect.TypeOf((*MocklogsReader)(nil).Read))
}
