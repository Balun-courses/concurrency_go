// Code generated by MockGen. DO NOT EDIT.
// Source: logs_writer.go

// Package wal is a generated GoMock package.
package wal

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockwalSegment is a mock of walSegment interface.
type MockwalSegment struct {
	ctrl     *gomock.Controller
	recorder *MockwalSegmentMockRecorder
}

// MockwalSegmentMockRecorder is the mock recorder for MockwalSegment.
type MockwalSegmentMockRecorder struct {
	mock *MockwalSegment
}

// NewMockwalSegment creates a new mock instance.
func NewMockwalSegment(ctrl *gomock.Controller) *MockwalSegment {
	mock := &MockwalSegment{ctrl: ctrl}
	mock.recorder = &MockwalSegmentMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockwalSegment) EXPECT() *MockwalSegmentMockRecorder {
	return m.recorder
}

// Write mocks base method.
func (m *MockwalSegment) Write(arg0 []byte) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Write", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Write indicates an expected call of Write.
func (mr *MockwalSegmentMockRecorder) Write(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Write", reflect.TypeOf((*MockwalSegment)(nil).Write), arg0)
}
