// Code generated by MockGen. DO NOT EDIT.
// Source: logs_reader.go

// Package wal is a generated GoMock package.
package wal

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MocksegmentsDirectory is a mock of segmentsDirectory interface.
type MocksegmentsDirectory struct {
	ctrl     *gomock.Controller
	recorder *MocksegmentsDirectoryMockRecorder
}

// MocksegmentsDirectoryMockRecorder is the mock recorder for MocksegmentsDirectory.
type MocksegmentsDirectoryMockRecorder struct {
	mock *MocksegmentsDirectory
}

// NewMocksegmentsDirectory creates a new mock instance.
func NewMocksegmentsDirectory(ctrl *gomock.Controller) *MocksegmentsDirectory {
	mock := &MocksegmentsDirectory{ctrl: ctrl}
	mock.recorder = &MocksegmentsDirectoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MocksegmentsDirectory) EXPECT() *MocksegmentsDirectoryMockRecorder {
	return m.recorder
}

// ForEach mocks base method.
func (m *MocksegmentsDirectory) ForEach(arg0 func([]byte) error) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ForEach", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// ForEach indicates an expected call of ForEach.
func (mr *MocksegmentsDirectoryMockRecorder) ForEach(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ForEach", reflect.TypeOf((*MocksegmentsDirectory)(nil).ForEach), arg0)
}
